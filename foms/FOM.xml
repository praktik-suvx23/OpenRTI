<?xml version="1.0" encoding="utf-8"?>
<objectModel xmlns="http://standards.ieee.org/IEEE1516-2010"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://standards.ieee.org/IEEE1516-2010 http://standards.ieee.org/downloads/1516/IEEE1516-2010.xsd">

  <!-- Min metadata-->
  <federation name="TestFOM"/>
  
  <!-- Example interactionClass. Atleast 1 interactionClass or objectClass is manditory-->
  <interactions>
    <interactionClass>
      <name>HLAinteractionRoot</name>
      <interactionClass>
        <name>InteractionClass1</name>
        <parameter>
          <name>Parameter1</name>
          <dataType>HLAinteger32BE</dataType>
          <transportation>HLAbestEffort</transportation> <!-- Faster update for none-critical updates -->
          <semantics>Test parameter</semantics>
        </parameter>
      </interactionClass>
    </interactionClass>
  </interactions>

  <!-- Add Objects -->
  <objects>
        <objectClass>
            <name>HLAobjectRoot</name>
            <!-- Add object Robot-->
            <objectClass>
                <name>robot</name>
                <sharing>PublishSubscribe</sharing>
                <semantics>An missile for a robot federation</semantics>
                <!-- Attribute: Robot name-->
                <attribute>
                    <name>robot-x</name>
                    <dataType>HLAunicodeString</dataType>
                    <updateType>Static</updateType>
                    <updateCondition>NA</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Name of the robot</semantics>
                </attribute>
                <!-- Attribute: Tail number-->
                <attribute>
                    <name>TailNumber</name>
                    <dataType>HLAunicodeString</dataType>
                    <updateType>Static</updateType>
                    <updateCondition>NA</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Tail number of the robot.</semantics>
                </attribute>
                <!-- Attribute: Fuel level-->
                <attribute>
                    <name>FuelLevel</name>
                    <dataType>FuelInt32</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Current fuel level of the robot at each point in time</semantics>
                </attribute>
                <!-- Attribute: Fuel type-->
                <attribute>
                    <name>FuelType</name>
                    <dataType>FuelTypeEnum32</dataType>
                    <updateType>Static</updateType>
                    <updateCondition>NA</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Type of fuel for the robot.</semantics>
                </attribute>
                <!-- Attribute: Position-->
                <attribute>
                    <name>Position</name>
                    <dataType>PositionRec</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Position of the robot.</semantics>
                </attribute>
                <!-- Attribute: Altitude-->
                <attribute>
                    <name>Altitude</name>
                    <dataType>HLAfloat64BE</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Current altitude of the robot.</semantics>
                </attribute>
                <!-- Attribute: Distance to target-->
                <attribute>
                    <name>DistanceToTarget</name>
                    <dataType>HLAfloat64BE</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Current distance to target for the robot.</semantics>
                </attribute>
                <attribute>
                    <name>FederateName</name>
                    <dataType>HLAunicodeString</dataType>
                    <updateType>Static</updateType>
                    <updateCondition>NA</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Name of the federate publishing the data.</semantics>
                </attribute>
            </objectClass>

            <!-- Add object Ship-->
            <objectClass>
                <name>ship</name>
                <sharing>PublishSubscribe</sharing>
                <!-- Attribute: Ship name-->
                <attribute>
                    <name>Ship-tag</name>
                    <dataType>HLAunicodeString</dataType>
                    <updateType>Static</updateType>
                    <updateCondition>NA</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Tag Number for ship</semantics>
                </attribute>
                <!-- Attribute: Position-->
                <attribute>
                    <name>Position</name>
                    <dataType>PositionRec</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Position of the robot.</semantics>
                </attribute>
                <!-- Attribute: Speed-->
                <attribute>
                    <name>Speed</name>
                    <dataType>HLAfloat32BE</dataType>
                    <updateType>Conditional</updateType>
                    <updateCondition>On change</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Speed of the ship.</semantics>
                </attribute>
                <attribute>
                    <name>FederateName</name>
                    <dataType>HLAunicodeString</dataType>
                    <updateType>Static</updateType>
                    <updateCondition>NA</updateCondition>
                    <ownership>NoTransfer</ownership>
                    <sharing>PublishSubscribe</sharing>
                    <dimensions/>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Name of the federate publishing the data.</semantics>
                </attribute>
            </objectClass>
        </objectClass>
    </objects>

  <!-- Example synchronizationPoint. Sync is optional -->
  <synchronizations>
    <synchronizationPoint>
        <label>InitialSync</label>
        <capability>Achieve</capability>
        <semantics>Achieved when all federates are ready to proceed</semantics>
    </synchronizationPoint>
  </synchronizations>

  <!-- Optional. Only needed if FOM is using DDM.
  Purpose:        Helps filter updates based on regions of interest, reducing unnecessary data transmission between federates.
  When to Use It: If federates should only receive relevant data instead of all updates.
  Require:        "conveyRegionDesignatorSets" in switches to be set "true"-->
  <dimensions>
    <dimension>
      <name>HLAdimension</name>
      <dataType>HLAinteger32BE</dataType>
      <upperBound>100</upperBound>
      <normalization>1.0</normalization>
    </dimension>
  </dimensions>

  <!-- The <transportations> section defines how data is transmitted between federates.
  Purpose:        Specifies whether messages should be delivered reliably or as fast as possible.
  When to Use It: Always needed, because each object and interaction must specify a transportation type.-->
  <transportations>
    <transportation>
      <name>HLAreliable</name>
      <reliable>Yes</reliable>
    </transportation>
    <transportation>
      <name>HLAbestEffort</name>
      <reliable>No</reliable>
    </transportation>
  </transportations>

  <!-- The <switches> section in the Federation Object Model (FOM) file configures various runtime
   behavior settings for the RTI1516e simulation. These switches control how data is provided, how 
   federates interact, and how the RTI manages updates and advisories. -->
  <switches>
    <autoProvide isEnabled="true"/>
    <conveyRegionDesignatorSets isEnabled="true"/>
    <conveyProducingFederate isEnabled="true"/>
    <attributeScopeAdvisory isEnabled="true"/>
    <attributeRelevanceAdvisory isEnabled="true"/>
    <objectClassRelevanceAdvisory isEnabled="true"/>
    <interactionRelevanceAdvisory isEnabled="true"/>
    <serviceReporting isEnabled="true"/>
    <exceptionReporting isEnabled="true"/>
    <delaySubscriptionEvaluation isEnabled="true"/>
    <automaticResignAction resignAction="NoAction"/>
  </switches>

  <!-- Datatypes uesd by HLA-interaction/objects. The variables used by the interaction/object-classes in the FOM needs to be defined here.
  Example: InteractionClass1 uses HLAinteger32BE which makes only that basicData necessary for InteractionClass1 to function-->
  <dataTypes>
    <!-- Basic Data Representations (for common data types) -->
    <basicDataRepresentations>
        <!-- Integer data type with 16-bit storage in big-endian format -->
        <basicData>
            <name>HLAinteger16BE</name>
            <size>16</size>
            <interpretation>Integer in the range [-2^15, 2^15 - 1]</interpretation>
            <endian>Big</endian>
            <encoding>HLAinteger16BE</encoding>
        </basicData>
        <!-- Integer data type with 32-bit storage in big-endian format -->
        <basicData>
            <name>HLAinteger32BE</name>
            <size>32</size>
            <interpretation>Integer in the range [-2^31, 2^31 - 1]</interpretation>
            <endian>Big</endian>
            <encoding>HLAinteger32BE</encoding>
        </basicData>
    </basicDataRepresentations>

    <!-- Simple Data Types (for basic, non-complex data like characters) -->
    <simpleDataTypes>
        <!-- Single character or octet data type (used for representing characters) -->
        <simpleData>
            <name>HLAASCIIchar</name>
            <representation>HLAoctet</representation>
        </simpleData>

        <!-- Fuel volume represented as an integer, useful for robot/airplane fuel levels -->
        <simpleData>
            <name>FuelInt32</name>
            <representation notes="airplaneeconomybase_1">HLAinteger32BE</representation>
            <units>Litres</units>
            <resolution>1</resolution>
            <accuracy>1</accuracy>
            <semantics>Integer that describes a fuel volume. Note that this is rounded to an integer value in the information exchange.</semantics>
        </simpleData>

        <!-- Angle data type (for Lat/Long positioning, using decimal degrees) -->
        <simpleData>
            <name>AngleFloat64</name>
            <representation>HLAfloat64BE</representation>
            <units>Degree</units>
            <resolution>0.000001</resolution>
            <accuracy>0.000001</accuracy>
            <semantics>Decimal degree data type used for Lat/Long positioning. A 64 bit value is required to accurately describe the position of an airplane on earth.</semantics>
        </simpleData>

        <!-- Scale factor used for scaling (time/space) as a ratio between two values -->
        <simpleData>
            <name>ScaleFactorFloat32</name>
            <representation>HLAfloat32BE</representation>
            <units>NA</units>
            <resolution>0.001</resolution>
            <accuracy>0.001</accuracy>
            <semantics>Ratio between two values. Used for the scaling of time or space. Negative numbers are not allowed.</semantics>
        </simpleData>
    </simpleDataTypes>

    <!-- Enumerated Data Types (for predefined value sets, such as booleans) -->
    <enumeratedDataTypes>
        <!-- Boolean data type with two possible values: true/false -->
        <enumeratedData>
            <name>HLAboolean</name>
            <representation>HLAinteger32BE</representation>
            <enumerator>
                <name>HLAfalse</name>
                <value>0</value>
            </enumerator>
            <enumerator>
                <name>HLAtrue</name>
                <value>1</value>
            </enumerator>
        </enumeratedData>
        
        <!-- Fuel type enumeration, specifying types of fuel for airplane (e.g., gasoline, jet fuel) -->
        <enumeratedData>
            <name>FuelTypeEnum32</name>
            <representation>HLAinteger32BE</representation>
            <semantics>Main type of fuel for an airplane. Hybrid fuel airplanes are mainly treated as aviation gasoline or jet fuel. Electrical airplanes to be covered in the next version of this FOM.</semantics>
            <enumerator>
                <name>AviationGasoline</name>
                <value>1</value>
            </enumerator>
            <enumerator>
                <name>JetFuel</name>
                <value>2</value>
            </enumerator>
            <enumerator>
                <name>EthanolFlexibleFuel</name>
                <value>3</value>
            </enumerator>
            <enumerator>
                <name>NaturalGas</name>
                <value>4</value>
            </enumerator>
        </enumeratedData>
    </enumeratedDataTypes>

    <!-- Array Data Types (for types like strings) -->
    <arrayDataTypes>
        <!-- String data type (an array of characters) -->
        <arrayData>
            <name>HLAASCIIstring</name>
            <dataType>HLAASCIIchar</dataType>
            <cardinality>Dynamic</cardinality>
            <encoding>HLAASCIIstring</encoding>
        </arrayData>
    </arrayDataTypes>

    <!-- Fixed Record Data Types (structured data, often used for positions, such as lat/long) -->
    <fixedRecordDataTypes>
        <!-- Position record data type with fields for latitude and longitude -->
        <fixedRecordData>
            <name>PositionRec</name>
            <encoding>HLAfixedRecord</encoding>
            <semantics>Position on Earth described as Lat/Long using WGS-84.</semantics>
            <field>
                <name>Lat</name>
                <dataType>AngleFloat64</dataType>
                <semantics>Latitude degree (-90 to 90)</semantics>
            </field>
            <field>
                <name>Long</name>
                <dataType>AngleFloat64</dataType>
                <semantics>Longitude degree (-180 to 180)</semantics>
            </field>
        </fixedRecordData>
    </fixedRecordDataTypes>

    <!-- Variant Record Data Types (used for records with optional fields or variable formats) -->
    <variantRecordDataTypes/>
</dataTypes>
</objectModel>